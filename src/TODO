pour les classes on fait des tableaux (sauf classe à instance unique type : RTC)
 - Tableau vide même si aucune instance (ne prend pas de plaçe en mémoire)
 - on instancie nos classes dans le tableau
 - ça permet de faire une boucle FOR pour executer tout les main() et tout les setup()
 - et faire si on veux, on peut faire des énumérations pour donner des noms par exemple aux moteurs car ducoup c'est moteur[1], moteur[2] etc...

Lctrl_Moteur créer une methode protected pour changer la fréquence rampe, et une methode publique en servo pour changeSpeed(), puis changeAcc() pour moteurPWM
Lctrl_Moteur commenter les classes



Lctrl_Radio_433MHz
    - refaire la classe si possible avec le minimum d'attributs, on vire m_value etc...
    - faire une methode qui retourne l'index d'un tableau de codes si il y a correspondance
    - methode qui lit les codes et retourne les valeurs char* pour pouvoir print
        et genérer une ligne de tableau en Serie ex {1642794, 24, 2} pour pouvoir le copier coller direct dans le tableaux de codes télécommandes




PLC => classe pour décoder une chaine de caratère et faire un standard de com String



finir de commenter proprement les classes :
 - IEC Timer
 - Trigger
 - 

 avec :

    /*!
        @brief  .

        Description

        @see .

        @param 
        @return .
    */
    